// Mocks generated by Mockito 5.4.2 from annotations
// in worktenser/test/features/auth/domain/usecases/auth_usecases_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:worktenser/features/auth/domain/entities/login.dart' as _i6;
import 'package:worktenser/features/auth/domain/entities/signup.dart' as _i5;
import 'package:worktenser/features/auth/domain/entities/user.dart' as _i2;
import 'package:worktenser/features/auth/domain/repository/auth_repository.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUserEntity_0 extends _i1.SmartFake implements _i2.UserEntity {
  _FakeUserEntity_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AuthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRepository extends _i1.Mock implements _i3.AuthRepository {
  MockAuthRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.UserEntity get currentUser => (super.noSuchMethod(
        Invocation.getter(#currentUser),
        returnValue: _FakeUserEntity_0(
          this,
          Invocation.getter(#currentUser),
        ),
      ) as _i2.UserEntity);
  @override
  set currentUser(_i2.UserEntity? _currentUser) => super.noSuchMethod(
        Invocation.setter(
          #currentUser,
          _currentUser,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.Stream<_i2.UserEntity> get user => (super.noSuchMethod(
        Invocation.getter(#user),
        returnValue: _i4.Stream<_i2.UserEntity>.empty(),
      ) as _i4.Stream<_i2.UserEntity>);
  @override
  _i4.Future<bool> signupWithEmailAndPassword(
          {required _i5.SignupEntity? signupInformation}) =>
      (super.noSuchMethod(
        Invocation.method(
          #signupWithEmailAndPassword,
          [],
          {#signupInformation: signupInformation},
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
  @override
  _i4.Future<bool> logInWithEmailAndPassword(
          {required _i6.LoginEntity? loginInformation}) =>
      (super.noSuchMethod(
        Invocation.method(
          #logInWithEmailAndPassword,
          [],
          {#loginInformation: loginInformation},
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
  @override
  _i4.Future<bool> signInWithGoogle() => (super.noSuchMethod(
        Invocation.method(
          #signInWithGoogle,
          [],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
  @override
  _i4.Future<bool> logOut() => (super.noSuchMethod(
        Invocation.method(
          #logOut,
          [],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
}
